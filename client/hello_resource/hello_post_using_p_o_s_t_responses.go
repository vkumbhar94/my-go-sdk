// Code generated by go-swagger; DO NOT EDIT.

package hello_resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HelloPostUsingPOSTReader is a Reader for the HelloPostUsingPOST structure.
type HelloPostUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HelloPostUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHelloPostUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewHelloPostUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHelloPostUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHelloPostUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHelloPostUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHelloPostUsingPOSTOK creates a HelloPostUsingPOSTOK with default headers values
func NewHelloPostUsingPOSTOK() *HelloPostUsingPOSTOK {
	return &HelloPostUsingPOSTOK{}
}

/*HelloPostUsingPOSTOK handles this case with default header values.

OK
*/
type HelloPostUsingPOSTOK struct {
	Payload string
}

func (o *HelloPostUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /rest/hello/post][%d] helloPostUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *HelloPostUsingPOSTOK) GetPayload() string {
	return o.Payload
}

func (o *HelloPostUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHelloPostUsingPOSTCreated creates a HelloPostUsingPOSTCreated with default headers values
func NewHelloPostUsingPOSTCreated() *HelloPostUsingPOSTCreated {
	return &HelloPostUsingPOSTCreated{}
}

/*HelloPostUsingPOSTCreated handles this case with default header values.

Created
*/
type HelloPostUsingPOSTCreated struct {
}

func (o *HelloPostUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /rest/hello/post][%d] helloPostUsingPOSTCreated ", 201)
}

func (o *HelloPostUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelloPostUsingPOSTUnauthorized creates a HelloPostUsingPOSTUnauthorized with default headers values
func NewHelloPostUsingPOSTUnauthorized() *HelloPostUsingPOSTUnauthorized {
	return &HelloPostUsingPOSTUnauthorized{}
}

/*HelloPostUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type HelloPostUsingPOSTUnauthorized struct {
}

func (o *HelloPostUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /rest/hello/post][%d] helloPostUsingPOSTUnauthorized ", 401)
}

func (o *HelloPostUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelloPostUsingPOSTForbidden creates a HelloPostUsingPOSTForbidden with default headers values
func NewHelloPostUsingPOSTForbidden() *HelloPostUsingPOSTForbidden {
	return &HelloPostUsingPOSTForbidden{}
}

/*HelloPostUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type HelloPostUsingPOSTForbidden struct {
}

func (o *HelloPostUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /rest/hello/post][%d] helloPostUsingPOSTForbidden ", 403)
}

func (o *HelloPostUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHelloPostUsingPOSTNotFound creates a HelloPostUsingPOSTNotFound with default headers values
func NewHelloPostUsingPOSTNotFound() *HelloPostUsingPOSTNotFound {
	return &HelloPostUsingPOSTNotFound{}
}

/*HelloPostUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type HelloPostUsingPOSTNotFound struct {
}

func (o *HelloPostUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /rest/hello/post][%d] helloPostUsingPOSTNotFound ", 404)
}

func (o *HelloPostUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
