// Code generated by go-swagger; DO NOT EDIT.

package user_resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vkumbhar94/my-go-sdk/models"
)

// GetUsersUsingGETReader is a Reader for the GetUsersUsingGET structure.
type GetUsersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUsersUsingGETOK creates a GetUsersUsingGETOK with default headers values
func NewGetUsersUsingGETOK() *GetUsersUsingGETOK {
	return &GetUsersUsingGETOK{}
}

/*GetUsersUsingGETOK handles this case with default header values.

OK
*/
type GetUsersUsingGETOK struct {
	Payload []*models.User
}

func (o *GetUsersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /rest/user][%d] getUsersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUsersUsingGETOK) GetPayload() []*models.User {
	return o.Payload
}

func (o *GetUsersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUsingGETUnauthorized creates a GetUsersUsingGETUnauthorized with default headers values
func NewGetUsersUsingGETUnauthorized() *GetUsersUsingGETUnauthorized {
	return &GetUsersUsingGETUnauthorized{}
}

/*GetUsersUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUsersUsingGETUnauthorized struct {
}

func (o *GetUsersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /rest/user][%d] getUsersUsingGETUnauthorized ", 401)
}

func (o *GetUsersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersUsingGETForbidden creates a GetUsersUsingGETForbidden with default headers values
func NewGetUsersUsingGETForbidden() *GetUsersUsingGETForbidden {
	return &GetUsersUsingGETForbidden{}
}

/*GetUsersUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetUsersUsingGETForbidden struct {
}

func (o *GetUsersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /rest/user][%d] getUsersUsingGETForbidden ", 403)
}

func (o *GetUsersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersUsingGETNotFound creates a GetUsersUsingGETNotFound with default headers values
func NewGetUsersUsingGETNotFound() *GetUsersUsingGETNotFound {
	return &GetUsersUsingGETNotFound{}
}

/*GetUsersUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetUsersUsingGETNotFound struct {
}

func (o *GetUsersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /rest/user][%d] getUsersUsingGETNotFound ", 404)
}

func (o *GetUsersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
